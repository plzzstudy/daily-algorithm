'''
# 사다리 타기(DFS)

현수와 친구들은 과자를 사먹기 위해 사다리 타기를 합니다.
사다리 표현은 2차원 평면은 0으로 채워지고, 사다리는 1로 표현합니다. 
현수는 특정 도착지점으로 도착하기 위해서는 몇 번째 열에서 출발해야 하는지 알고싶습니다. 
특정 도착지점은 2로 표기됩니다. 여러분이 도와주세요.

▣ 입력설명
10*10의 사다리 지도가 주어집니다.

▣ 출력설명
출발지 열 번호를 출력하세요.

▣ 입력예제 1 
1 0 1 0 0 1 0 1 0 1
1 0 1 1 1 1 0 1 0 1 
1 0 1 0 0 1 0 1 0 1 
1 0 1 0 0 1 0 1 1 1 
1 0 1 0 0 1 0 1 0 1 
1 0 1 1 1 1 0 1 0 1
1 0 1 0 0 1 0 1 1 1 
1 1 1 0 0 1 0 1 0 1 
1 0 1 0 0 1 1 1 0 1
1 0 1 0 0 2 0 1 0 1

▣ 출력예제 1 
7

'''
import sys

arr = [list(map(int, sys.stdin.readline().rstrip().split())) for _ in range(10)]
check = [[0] * 10 for _ in range(10)]

# 위, 오, 왼 (아래에서 부터 거꾸로 올라가서 답을 찾는 방식)
dx = [1, 0, 0]
dy = [0, 1, -1]

def dfs(x, y):
    check[x][y] = 1

    if x == 0:
        print(y)
    else:
        if y+1 < 10 and arr[x][y+1] == 1 and check[x][y+1] == 0: # check가 없으면 계속 왼쪽 오른쪽 반복하게됨
            dfs(x, y+1)
        elif y-1 >= 0 and arr[x][y-1] == 1 and check[x][y-1] == 0:
            dfs(x, y-1)
        else: # 옆으로 갈 수 있는 길이 없는 경우 위로 이동
            dfs(x-1, y)

for i in range(10):
    if arr[9][i] == 2:
        dfs(9, i)
