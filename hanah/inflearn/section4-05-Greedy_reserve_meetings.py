'''
# 회의실 배정(그리디)

한 개의 회의실이 있는데 이를 사용하고자 하는 n개의 회의들에 대하여 회의실 사용표를 만들 려고 한다. 
각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하 면서 회의실을 사용할 수 있는 최대수의 회의를 찾아라.
단, 회의는 한번 시작하면 중간에 중 단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.

▣ 입력설명
첫째 줄에 회의의 수 n(1<=n<=100,000)이 주어진다. 둘째 줄부터 n+1 줄까지 각 회의의 정 보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다.

▣ 출력설명
첫째 줄에 최대 사용할 수 있는 회의 수를 출력하여라.

▣ 입력예제 1 
5
1 4
2 3
3 5 
4 6 
5 7

▣ 출력예제 1 
3

예제설명
(2, 3) , (3, 5), (5, 7)이 회의실을 이용할 수 있다.
'''


# 그리디 알고리즘
# 현 단계에서 가장 좋은 조건이 무엇인지를 따져보고 선택하는 것
# 그리디 알고리즘에는 대부분 정렬이 동반된다.

n = int(input())
meetings = [list(map(int, input().split())) for _ in range(n)]

# 회의가 끝나는 시간을 기준으로 정렬. 회의가 빨리 끝나야 다음 회의를 카운트 할 수 있으므로 끝나는 시간을 기준으로 정렬하는게 최대한 회의를 많이 잡는것에 유리.
meetings.sort(key=lambda x: (x[1], x[0])) # 정렬 기준은 끝나는 시간, 시작하는 시간 순으로

# solution1
target = meetings[0]
cnt = 1
for i in range(1, n):
    if target[1] <= meetings[i][0]:
        cnt += 1
        target = meetings[i]

print(cnt)

# solution2 >> 시간초과
endtime = 0
cnt = 0
for s, e in meetings:
    if endtime <= s:
        endtime = e
        cnt += 1

print(cnt)
